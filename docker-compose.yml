
services:
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana 
    depends_on:
      - prometheus
      - loki
      - tempo
    environment:
      - GF_METRICS_ENABLED=true 
    networks:
      - observabilidad

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    networks:
      - observabilidad

  loki:
    image: grafana/loki:2.9.0
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki-data:/loki-data
      - ./loki/local-config.yaml:/etc/loki/local-config.yaml:ro
    networks:
      - observabilidad

  tempo:
    image: grafana/tempo:2.4.0
    command: ["-config.file=/etc/tempo/tempo-config.yaml"]
    ports:
      - "3200:3200"     # HTTP API / status
      - "4317:4317"     # OTLP gRPC
    volumes:
      - tempo_data:/var/tempo
      - ./tempo/tempo-config.yaml:/etc/tempo/tempo-config.yaml:ro
    networks:
      - observabilidad

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.97.0
    command: ["--config=/etc/otel-collector-config.yml"]
    ports:
      - "4318:4318"   # OTLP HTTP
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
      - ./backend_Prueba/simulado.log:/var/log/simulado.log:ro
    networks:
      - observabilidad

  backend:
    build:
      context: ./backend_Prueba       
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://otel-collector:4318/v1/traces
      - CORS_ORIGIN=http://localhost:4200
    volumes:
      - ./backend_Prueba/simulado.log:/app/logs/simulado.log 
    depends_on: [otel-collector]
    networks: [observabilidad]

  frontend:
    build:
      context: ./telemetri_Angular
      dockerfile: Dockerfile
    ports:
      - "4200:4200"
    environment:
      - NG_CLI_ANALYTICS=false
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    volumes:
      - ./telemetri_Angular:/app
      - /app/node_modules
    depends_on:
      - otel-collector
      - backend
    networks:
      - observabilidad




networks:
  observabilidad:
    driver: bridge

volumes:
  prometheus_data:
  loki_data:  
  tempo_data: